import java_cup.runtime.Symbol;
%%
%class Lexer

%implements java_cup.runtime.Scanner
%function next_token
%type java_cup.runtime.Symbol

%eofval{
	return new Symbol(sym.EOF, null);
%eofval}

DIGIT=[0-9]
ALPHA=[a-zA-z]
NUMBER=({DIGIT})+([.]({DIGIT})+)?
IDENTIFIER=({ALPHA})+
WHITE_SPACE=([\ \n\r\t\f\b])+
%%
<YYINITIAL> {WHITE_SPACE} { }

<YYINITIAL> {NUMBER} { 
	return new Symbol(sym.NM, yytext());
}
<YYINITIAL> {IDENTIFIER} { 
	return new Symbol(sym.ID, yytext());
}

<YYINITIAL> ";" { 
	return new Symbol(sym.SM, yytext());
}

<YYINITIAL> "=" { 
	return new Symbol(sym.AO, yytext());
}


<YYINITIAL> . {
	return new Symbol(sym.error, "Error!");
}